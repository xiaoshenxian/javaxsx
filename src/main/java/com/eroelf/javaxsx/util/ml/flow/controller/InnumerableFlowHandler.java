package com.eroelf.javaxsx.util.ml.flow.controller;

import com.eroelf.javaxsx.util.ml.feature.Item;
import com.eroelf.javaxsx.util.ml.feature.model.Modeler;
import com.eroelf.javaxsx.util.ml.feature.model.impl.IdleModeler;
import com.eroelf.javaxsx.util.ml.feature.strategy.Strategy;

/**
 * Handles the context of a modeling and scoring flow in which candidates are innumerable but are generated by {@link Strategy} instances.
 * In many cases, the {@link Item} features are "modeled" at the same time when they are generated by any {@link Strategy}, thus the {@link #getModeler()} method is defaulted by return an {@link IdleModeler} which does nothing.
 * 
 * @author weikun.zhong
 *
 * @param <T> the type of those {@link Item} instances to be processed.
 */
public interface InnumerableFlowHandler<T extends Item> extends StatisticsCalculator, StrategyHandler<T>, ModelerHandler, ScorerHandler, BatchHandler
{
	@Override
	default public Modeler getModeler()
	{
		return IdleModeler.get();
	}
}
